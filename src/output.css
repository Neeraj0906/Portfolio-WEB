/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */
@tailwind base;
@tailwind components;
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.right-\[-0rem\] {
  right: -0rem;
}
.mx-auto {
  margin-inline: auto;
}
.line-clamp-3 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.h-\[30px\] {
  height: 30px;
}
.h-screen {
  height: 100vh;
}
.max-h-\[400px\] {
  max-height: 400px;
}
.min-h-screen {
  min-height: 100vh;
}
.w-\[30px\] {
  width: 30px;
}
.w-full {
  width: 100%;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-not-allowed {
  cursor: not-allowed;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-4 {
  border-style: var(--tw-border-style);
  border-width: 4px;
}
.border-\[\#16A085\] {
  border-color: #16A085;
}
.border-\[\#bdc3c7\] {
  border-color: #bdc3c7;
}
.bg-\[\#0d0e0f\] {
  background-color: #0d0e0f;
}
.bg-\[\#0e672a\] {
  background-color: #0e672a;
}
.bg-\[\#16A085\] {
  background-color: #16A085;
}
.bg-\[\#1b2120\] {
  background-color: #1b2120;
}
.bg-\[\#293c94\] {
  background-color: #293c94;
}
.bg-\[\#2C3E50\] {
  background-color: #2C3E50;
}
.bg-\[\#3498db\] {
  background-color: #3498db;
}
.bg-\[\#ecf0f1\] {
  background-color: #ecf0f1;
}
.bg-\[\#f4f6f7\] {
  background-color: #f4f6f7;
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab,;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-\[\#F1C40F\] {
  --tw-gradient-from: #F1C40F;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#F39C12\] {
  --tw-gradient-to: #F39C12;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.bg-clip-text {
  background-clip: text;
}
.object-cover {
  object-fit: cover;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}
.text-\[\#2C3E50\] {
  color: #2C3E50;
}
.text-\[\#7f8c8d\] {
  color: #7f8c8d;
}
.text-\[\#14181c\] {
  color: #14181c;
}
.text-\[\#BDC3C7\] {
  color: #BDC3C7;
}
.text-\[\#F1C40F\] {
  color: #F1C40F;
}
.text-\[\#F39C12\] {
  color: #F39C12;
}
.text-transparent {
  color: transparent;
}
.underline {
  text-decoration-line: underline;
}
.decoration-4 {
  text-decoration-thickness: 4px;
}
.underline-offset-4 {
  text-underline-offset: 4px;
}
.opacity-50 {
  opacity: 50%;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.hover\:scale-105 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:bg-\[\#1ABC9C\] {
  &:hover {
    @media (hover: hover) {
      background-color: #1ABC9C;
    }
  }
}
.hover\:bg-\[\#2980b9\] {
  &:hover {
    @media (hover: hover) {
      background-color: #2980b9;
    }
  }
}
.hover\:bg-\[\#34495E\] {
  &:hover {
    @media (hover: hover) {
      background-color: #34495E;
    }
  }
}
:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  font-size: larger;
  margin-top: -10px;
  margin-left: -8px;
}
a {
  font-weight: 500;
  color: #9da1ee;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  background-color: #a96868;
  cursor: pointer;
}
button:hover {
  border-color: #646cff;
}
nav {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  z-index: 1000;
}
body {
  margin-left: 16rem;
  padding: 0;
  font-family: 'Inter', sans-serif;
  background-color: #ecf0f1;
}
section.ml-64 {
  margin-left: 16rem;
}
.card:hover {
  transform: scale(1.05);
  transition: transform 0.2s ease-in-out;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
