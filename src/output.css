/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */
@tailwind base;
@tailwind components;
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.mt-\[-15px\] {
  margin-top: -15px;
}
.mt-auto {
  margin-top: auto;
}
.ml-\[25px\] {
  margin-left: 25px;
}
.ml-\[100px\] {
  margin-left: 100px;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.h-screen {
  height: 100vh;
}
.min-h-screen {
  min-height: 100vh;
}
.w-full {
  width: 100%;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-4 {
  border-style: var(--tw-border-style);
  border-width: 4px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-\[\#3d566b\] {
  border-color: #3d566b;
}
.border-\[\#16A085\] {
  border-color: #16A085;
}
.bg-gradient-to-b {
  --tw-gradient-position: to bottom in oklab,;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab,;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-\[\#2C3E50\] {
  --tw-gradient-from: #2C3E50;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-\[\#5b79d9\] {
  --tw-gradient-from: #5b79d9;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-\[\#16A085\] {
  --tw-gradient-from: #16A085;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#1a2632\] {
  --tw-gradient-to: #1a2632;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#1abc9c\] {
  --tw-gradient-to: #1abc9c;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#F39C12\] {
  --tw-gradient-to: #F39C12;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.object-cover {
  object-fit: cover;
}
.object-top {
  object-position: top;
}
.p-\[2px\] {
  padding: 2px;
}
.text-center {
  text-align: center;
}
.text-\[\#BDC3C7\] {
  color: #BDC3C7;
}
.text-\[\#ECF0F1\] {
  color: #ECF0F1;
}
.text-\[\#F39C12\] {
  color: #F39C12;
}
.opacity-0 {
  opacity: 0%;
}
.opacity-25 {
  opacity: 25%;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.group-hover\:scale-105 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.group-hover\:opacity-75 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 75%;
    }
  }
}
.group-hover\:opacity-100 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.hover\:bg-\[\#1ABC9C\]\/20 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, #1ABC9C 20%, transparent);
    }
  }
}
.hover\:bg-\[\#1ABC9C\]\/70 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, #1ABC9C 70%, transparent);
    }
  }
}
:root {
  --primary-color: #4682B4;
  --secondary-color: #20B2AA;
  --accent-color: #E67E22;
  --light-bg-color: #e77f7f;
  --dark-bg-gradient-start: #273746;
  --dark-bg-gradient-end: #1C2833;
  --heading-color: #FFD700;
  --text-color: #B0C4DE;
  --paper-text-color: #273215;
  font-family: 'Inter', system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  font-size: larger;
}
a {
  font-weight: 500;
  color: var(--primary-color);
  text-decoration: inherit;
}
a:hover {
  color: var(--secondary-color);
}
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  background-color: var(--secondary-color);
  color: white;
}
button:hover {
  border-color: var(--accent-color);
}
nav {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  z-index: 1000;
}
body {
  margin-left: 16rem;
  padding: 0;
  font-family: 'Inter', sans-serif;
  background-color: var(--light-bg-color);
}
section.ml-64 {
  margin-left: 16rem;
}
.card:hover {
  transform: scale(1.05);
  transition: transform 0.2s ease-in-out;
}
.bg-gradient-custom {
  background-image: linear-gradient(to bottom, var(--dark-bg-gradient-start), var(--dark-bg-gradient-end));
}
h1, h2, h3 {
  color: var(--heading-color);
}
p {
  color: var(--text-color);
}
.paper {
  color: var(--paper-text-color);
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
